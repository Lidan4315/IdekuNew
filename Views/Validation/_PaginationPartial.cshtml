@model Ideku.Models.ViewModels.Validation.ValidationListViewModel

@if (Model.TotalPages > 1)
{
    var maxPagesToShow = 5;
    var startPage = Math.Max(1, Model.CurrentPage - (maxPagesToShow / 2));
    var endPage = Math.Min(Model.TotalPages, startPage + maxPagesToShow - 1);

    if (endPage - startPage + 1 < maxPagesToShow)
    {
        startPage = Math.Max(1, endPage - maxPagesToShow + 1);
    }

<nav aria-label="Page navigation">
    <ul class="pagination pagination-modern mb-0">
        @{
            var routeData = new Dictionary<string, string>
            {
                { "searchString", Model.SearchString },
                { "selectedDivision", Model.SelectedDivision },
                { "selectedDepartment", Model.SelectedDepartment },
                { "selectedStatus", Model.SelectedStatus },
                { "selectedStage", Model.SelectedStage?.ToString() },
            };
        }

        <!-- First Button -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("List", new Dictionary<string, string>(routeData) { { "pageNumber", "1" } })" data-page="1">&laquo; First</a>
        </li>
        <!-- Previous Button -->
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("List", new Dictionary<string, string>(routeData) { { "pageNumber", (Model.CurrentPage - 1).ToString() } })" data-page="@(Model.CurrentPage - 1)">Previous</a>
        </li>

        <!-- Page Number Buttons -->
        @for (var i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("List", new Dictionary<string, string>(routeData) { { "pageNumber", i.ToString() } })" data-page="@i">@i</a>
            </li>
        }

        <!-- Next Button -->
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("List", new Dictionary<string, string>(routeData) { { "pageNumber", (Model.CurrentPage + 1).ToString() } })" data-page="@(Model.CurrentPage + 1)">Next</a>
        </li>
        <!-- Last Button -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("List", new Dictionary<string, string>(routeData) { { "pageNumber", Model.TotalPages.ToString() } })" data-page="@Model.TotalPages">Last &raquo;</a>
        </li>
    </ul>
</nav>
}
